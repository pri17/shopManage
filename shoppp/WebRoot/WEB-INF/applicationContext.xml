<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

<!--定义数据源Bean,使用C3P0数据源实现-->
<!--设置连接数据库参数-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"
		p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://localhost:3307/shopinf"
		p:user="root"
		p:password="12345"
		p:maxPoolSize="40"
		p:minPoolSize="1"
		p:initialPoolSize="1"
		p:maxIdleTime="20">
	</bean>
	
<!-- 配置Sessionfactory -->
<!-- 依赖注入数据源，注入正是上面定义的dataSource -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- 列出所有的持久化类 -->
		<property name="annotatedClasses">
			<list>
				<value>com.system.model.Goods</value>
				<value>com.system.model.Purchase</value>
				<value>com.system.model.Sale</value>
				<value>com.system.model.Staff</value>
				<value>com.system.model.Type</value>
				<value>com.system.model.Shop</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<!-- 指定数据库方言、是否自动建表、是否生成SQL语句等 	-->
			<value>
			hibernate.dialect=org.hibernate.dialect.MySQLDialect
			hibernate.hbm2ddl.auto=update
			hibernate.show_sql=true
			hibernate.format_sql=true
			#开启二级缓存
			hibernate.cache.use_second_level_cache=true
			#设置二级缓存的提供者
			hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
			</value>
		</property>
	</bean>
	<!-- 定义业务逻辑组件模板,为之注入DAO组件 -->
	<bean id="managerTemplate" abstract="true" lazy-init="true"
		p:goodsDao-ref="goodsDao"
		p:purDao-ref="purchaseDao"
		p:saleDao-ref="saleDao"
		p:shopDao-ref="shopDao"
		p:staffDao-ref="staffDao"
		p:typeDao-ref="typeDao"/>
		

	<bean id="shopManager"
		class="com.system.service.impl.shopManagerImpl"
		parent="managerTemplate"/>
	
	
<!-- 配置hibernate局部事务管理器 -->	
<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"
	p:sessionFactory-ref="sessionFactory"></bean>
<!-- 配置事务增强处理Bean,指定事务管理器 -->
<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<tx:attributes>
	<!-- 所有以'get'开头的方法是read—only的 -->
		<tx:method name="get*" read-only="true"/>
	<!-- 其他方法使用默认的事务设置 -->
		<tx:method name="*"/>
	</tx:attributes>
 </tx:advice>
 
<aop:config>
		<!-- 配置一个切入点，匹配skpPurchaseManager\skpGoodsManager\skpSaleManager
			两个Bean的所有方法的执行 -->
		<aop:pointcut id="leePointcut"
			expression="bean(*Manager)"/>
		<!-- 指定在leePointcut切入点应用txAdvice事务增强处理 -->
		<aop:advisor advice-ref="txAdvice" 
			pointcut-ref="leePointcut"/>
	</aop:config>	

	</beans>